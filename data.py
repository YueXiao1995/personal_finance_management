"""
** Author: Xiao Yue
** Date: 2020-08-23
"""
class DataManager():
    def __init__(self):
        # 月收入
        self.monthly_income = {
            "2020-01": [0],
            "2020-02": [0],
            "2020-03": [0],
            "2020-04": [0],
            "2020-05": [0],
            "2020-06": [0],
            "2020-07": [0],
            "2020-08": [888, 1000, 3596],
            "2020-09": [0],
            "2020-10": [0],
            "2020-11": [0],
            "2020-12": [0]
        }

        # 每日消费
        self.daily_spend = {"2020-02-01": [317.5],
                       "2020-02-02": [],
                       "2020-02-03": [],
                       "2020-02-04": [],
                       "2020-02-05": [],
                       "2020-02-06": [],
                       "2020-02-07": [],
                       "2020-02-08": [],
                       "2020-02-09": [13],
                       "2020-02-10": [50, 10],
                       "2020-02-11": [17],
                       "2020-02-12": [169],
                       "2020-02-13": [399, 353, 64],
                       "2020-02-14": [28, 56.19, 258, 8.9, 23],
                       "2020-02-15": [8.8, 22.7],
                       "2020-02-16": [],
                       "2020-02-17": [13.5],
                       "2020-02-18": [],
                       "2020-02-19": [],
                       "2020-02-20": [],
                       "2020-02-21": [],
                       "2020-02-22": [119.3, 66, 6, 36.5, 4.9],
                       "2020-02-23": [16.4],
                       "2020-02-24": [88.99, 124, 28],
                       "2020-02-25": [],
                       "2020-02-26": [13.5, 28],
                       "2020-02-27": [84.7],
                       "2020-02-28": [],
                       "2020-02-29": [398, 6],

                       "2020-03-01": [8.2, 67.9],
                       "2020-03-02": [40],
                       "2020-03-03": [],
                       "2020-03-04": [],
                       "2020-03-05": [],
                       "2020-03-06": [4.8],
                       "2020-03-07": [8.4],
                       "2020-03-08": [],
                       "2020-03-09": [6.7, 6.8],
                       "2020-03-10": [183, 10],
                       "2020-03-11": [],
                       "2020-03-12": [],
                       "2020-03-13": [199],
                       "2020-03-14": [],
                       "2020-03-15": [],
                       "2020-03-16": [],
                       "2020-03-17": [],
                       "2020-03-18": [10, 191.45],
                       "2020-03-19": [],
                       "2020-03-20": [],
                       "2020-03-21": [],
                       "2020-03-22": [],
                       "2020-03-23": [1],
                       "2020-03-24": [56, 29.9, 154],
                       "2020-03-25": [13],
                       "2020-03-26": [28],
                       "2020-03-27": [9],
                       "2020-03-28": [],
                       "2020-03-29": [],
                       "2020-03-30": [6],

                       "2020-04-01": [],
                       "2020-04-02": [30, 7.6, 33.5],
                       "2020-04-03": [],
                       "2020-04-04": [11, 11],
                       "2020-04-05": [],
                       "2020-04-06": [],
                       "2020-04-07": [],
                       "2020-04-08": [],
                       "2020-04-09": [],
                       "2020-04-10": [],
                       "2020-04-11": [],
                       "2020-04-12": [],
                       "2020-04-13": [10],
                       "2020-04-14": [3, 11, 10],
                       "2020-04-15": [42],
                       "2020-04-16": [],
                       "2020-04-17": [],
                       "2020-04-18": [],
                       "2020-04-19": [],
                       "2020-04-20": [11],
                       "2020-04-21": [],
                       "2020-04-22": [],
                       "2020-04-23": [],
                       "2020-04-24": [78],
                       "2020-04-25": [11],
                       "2020-04-26": [28],
                       "2020-04-27": [],
                       "2020-04-28": [16.5],
                       "2020-04-29": [38],
                       "2020-04-30": [148, 6, 11, 26],

                       "2020-05-01": [16],
                       "2020-05-02": [13.8, 99.8, 47.5, 13],
                       "2020-05-03": [45.5],
                       "2020-05-04": [41],
                       "2020-05-05": [209.7, 11, 11],
                       "2020-05-06": [11],
                       "2020-05-07": [],
                       "2020-05-08": [11],
                       "2020-05-09": [8.5],
                       "2020-05-10": [10, 41],
                       "2020-05-11": [],
                       "2020-05-12": [11, 11, 9],
                       "2020-05-13": [],
                       "2020-05-14": [],
                       "2020-05-15": [],
                       "2020-05-16": [13],
                       "2020-05-17": [],
                       "2020-05-18": [41],
                       "2020-05-19": [],
                       "2020-05-20": [41],
                       "2020-05-21": [],
                       "2020-05-22": [11],
                       "2020-05-23": [14.5],
                       "2020-05-24": [],
                       "2020-05-25": [11, 11],
                       "2020-05-26": [],
                       "2020-05-27": [],
                       "2020-05-28": [11],
                       "2020-05-29": [],
                       "2020-05-30": [6],
                       "2020-05-31": [41],

                       "2020-06-01": [],
                       "2020-06-02": [],
                       "2020-06-03": [11],
                       "2020-06-04": [],
                       "2020-06-05": [57],
                       "2020-06-06": [11, ],
                       "2020-06-07": [1.5],
                       "2020-06-08": [334.62, 14],
                       "2020-06-09": [325, 197.5],
                       "2020-06-10": [10],
                       "2020-06-11": [1.5, 11, 1.5],
                       "2020-06-12": [45, 208],
                       "2020-06-13": [1.5, 1.5, 1.5, 204, 9, 226],
                       "2020-06-14": [0.75, 0.75, 3],
                       "2020-06-15": [97.19, 79, 584.79, 104],
                       "2020-06-16": [19.9, 20.4, 39.9, 98, 12.8, 17.9, 68, 39.9, 26.37, 79, 69, 50.74, 109, 57.6, 32,
                                      18.8, 48, 67, 1.5, 0.75, 271.36],
                       "2020-06-17": [1.5, 0.75],
                       "2020-06-18": [133, 328, 40.86, 58.9, 29.9, 118, 38.9, 48, 32.9, 44.5, 8, 30],
                       "2020-06-19": [21.5, 2, 16, 19.3],
                       "2020-06-20": [14.25, 13.3, 16.8, 30, 5.8],
                       "2020-06-21": [9, 23.5],
                       "2020-06-22": [158.8, 52.57, 18.5, 7.8],
                       "2020-06-23": [10, 236.34, 4, 32, 4, 14.8],
                       "2020-06-24": [25, 19, 1.5],
                       "2020-06-25": [4],
                       "2020-06-26": [158.6, 28, 54, 15],
                       "2020-06-27": [6.5, 49.5, 8],
                       "2020-06-28": [],
                       "2020-06-29": [90.79, 25],
                       "2020-06-30": [6, 4, 25, 2.6, 7.8, 16],

                       "2020-07-01": [7.2, 7.8, 5, 38, 5, 29.79, 24.9, 8],
                       "2020-07-02": [11.31, 8],
                       "2020-07-03": [2, 4, 10, 182.79],
                       "2020-07-04": [14, 2, 17, 18.6, 4, 4, 49.5, 9],
                       "2020-07-05": [19, 12.8],
                       "2020-07-06": [11, 25, 5, 26.66],
                       "2020-07-07": [13],
                       "2020-07-08": [7, 164.19, 3.5, 76],
                       "2020-07-09": [6, 23.1, 4.1, 3.5],
                       "2020-07-10": [10, 24.8],
                       "2020-07-11": [45, 10, 3, 191, 20, 16, 21.88],
                       "2020-07-12": [8.5, 7.8, 17],
                       "2020-07-13": [7.8, 37],
                       "2020-07-14": [7.8, 18, 25.8],
                       "2020-07-15": [7.8, 10.5, 183.67, 15.9, 144.58, 12.32],
                       "2020-07-16": [16.79, 8],
                       "2020-07-17": [],
                       "2020-07-18": [],
                       "2020-07-19": [599, 148.9, 2, 18.6],
                       "2020-07-20": [69, 16.8, 5, 4, 37, 3],
                       "2020-07-21": [6.5, 11, 5.4],
                       "2020-07-22": [13, 25, 13, 3, 59.8],
                       "2020-07-23": [5, 3, 5, 108.1, 100, 300, 6],
                       "2020-07-24": [19.8],
                       "2020-07-25": [148, 21.5, 11, 3],
                       "2020-07-26": [17.5, 28, 41.7],
                       "2020-07-27": [9.8, 15, 50, 10, 360],
                       "2020-07-28": [11, 109.9, 112.4],
                       "2020-07-29": [6, 5.6, 11, 15],
                       "2020-07-30": [14, 16, 107.72, 200, 5, 6, 3.5],
                       "2020-07-31": [100, 11, 3],
                       # =======================================================
                       "2020-08-01": [35, 7.2, 7.8, 26, 280.98, 39.8, 42.1, 5],
                       "2020-08-02": [44, 34.5, 39, 117.62, 18.36],

                       "2020-08-03": [259],
                       "2020-08-04": [14, 76.4],
                       "2020-08-05": [12.8],
                       "2020-08-06": [11],
                       "2020-08-07": [5, 5, 4.5, 26.2],
                       "2020-08-08": [25, 120.8, 39, 16.34, 26.2],
                       "2020-08-09": [69],

                       "2020-08-10": [5, 10, 50],
                       "2020-08-11": [14, 80, 20],
                       "2020-08-12": [6.8, 7.5, 25, 5.8, 3.5],
                       "2020-08-13": [115, 3.5],
                       "2020-08-14": [13, 5],
                       "2020-08-15": [90, 26, 14],
                       "2020-08-16": [21, 5, 24],

                       "2020-08-17": [6.2, 12.8, 11, 4.5, 24.2, 46, 29.3, 8.8, 100],
                       "2020-08-18": [4.5, 10, 19.8, 3.5],
                       "2020-08-19": [14, 5, 174, 187],
                       "2020-08-20": [14, 200, 469, 881, 1196],
                       "2020-08-21": [3, 5, 4.5, 24, 146],
                       "2020-08-22": [300, 15.4, 93.3, 15.4],
                       "2020-08-23": [63.5]
                       }

        # 固定开销
        self.fixed_charge = {
            "rent": (3430 * 0.9) * 10 + (3430 * 0.5) * 2 + 343 * 12,
            "JD plus": 69,
            "Apple Music": 10 * 12,
            "Apple Cloud": 6 * 12,
            "eVPN": 28 * 12,
            "滴答清单": 16 * 12,
            "NetEase Music": 11 * 12,
            "ExpressVPN": 700,
            "Mcdonald's Card": 35 * 12,
            "Takeout": 2 * 12,
            "Cloud Server": 117.62 + 18.36 + 39
        }

        # 分类支出 (从8月开始)
        self.spend_by_categoty = {
            '2020-08': {'food': [1365.34, 24, 15.4, 63.5],
                         'clothes': [115],
                         'rent': [3430],
                         'transportation': [100 + 50, 5, 100, 174, 187, 469, 598],
                         'commodity': [26, 259, 76.4, 120.8, 24.2, 46, 29.3],
                         'education': [],
                         'entertainment': [11, 90, 440.5, 280.98],
                         'medical': [34.5],
                         'gift': [146, 300, 93.3, 440.5, 598],
                         'others': [39, 117.62, 10, 21]
                         },
            "2020-09": {}
        }

        # 总资产，每月1日结算
        self.total_assets = {
            '2020-08': {'deposit': 4450 + 250, 'stock': 0, 'fund': 18100, 'debt': -1315 - 2826, 'bond': 0, 'noble metals': 0, 'real estate': 0}
        }

    def get_monthly_income(self):
        return self.monthly_income

    def get_daily_spend_sum(self):
        daily_spend_sum = dict()
        for day in self.daily_spend:
            daily_spend_sum[day] = sum(self.daily_spend[day])
        return daily_spend_sum

    def get_monthly_spend_sum(self):
        monthly_spend_sum = dict()
        for day in self.daily_spend:
            month = day[:7]
            if month not in monthly_spend_sum:
                monthly_spend_sum[month] = sum(self.daily_spend[day])
            else:
                monthly_spend_sum[month] += sum(self.daily_spend[day])
        return monthly_spend_sum


    def get_fixed_charge(self):
        return self.fixed_charge

    def get_spend_by_category_by_month(self, month):
        return self.spend_by_categoty[month]

    def get_total_assets(self):
        return self.total_assets

    def get_total_assets_by_month(self, month):
        sum = 0
        spend_by_category = self.total_assets[month]
        for categoty in spend_by_category:
            sum += spend_by_category[categoty]
        return sum
